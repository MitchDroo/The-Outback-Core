name: .NET

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and Test .NET
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3.2.0

    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3.1

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.1.1

    - name: Setup VSTest
      uses: darenm/Setup-VSTest@v1.2

    - name: Restore NuGet packages
      run: nuget restore Outback/Outback.sln

    - name: Build the Solution
      run: msbuild Outback/Outback.sln /p:Configuration=Debug

    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: Build
        path: Outback\Outback\bin\Debug\Outback.dll

    - name: Run Tests
      run: vstest.console.exe Outback\Outback.Tests\bin\Debug\Outback.Tests.dll /Logger:trx /Collect:"Code Coverage;Format=Xml;CoverageFileName=coverage.xml"

    - name: Publish Test Results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Test Results
        path: "**/*.trx"
        reporter: dotnet-trx
        fail-on-error: true

    - name: Publish Code Coverage
      uses: codecov/codecov-action@v3
      with:
        name: Code Coverage Results
        flags: automated
        token: ${{ secrets.CODECOV_TOKEN }}
        files: "**/*.xml"
        fail_ci_if_error: true
        verbose: true

  lint:
    name: Lints code base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_CSHARP: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}