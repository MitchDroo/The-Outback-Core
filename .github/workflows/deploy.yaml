name: Deploy to GitHub Actions

on:
  workflow_dispatch:
    inputs:
      level:
        description: 'Semantic Version Level (major, minor, patch)'
        required: true
        default: 'patch'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  bump-semver:
    name: Bump Semantic Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.bump-semver.outputs.new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Latest Tag
        id: get-latest-tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        if: ${{ github.event.inputs.level != null }}

      - name: Bump Semantic Version
        id: bump-semver
        uses: actions-ecosystem/action-bump-semver@v1
        if: ${{ steps.get-latest-tag.outputs.tag != '' }}
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: ${{ github.event.inputs.level }}

      - name: Display New Version
        run: |
          echo "New version: ${{ steps.bump-semver.outputs.new_version }}"

      - name: Push New Tag
        uses: actions-ecosystem/action-push-tag@v1
        if: ${{ steps.bump-semver.outputs.new_version != null }}
        with:
          tag: ${{ steps.bump-semver.outputs.new_version }}
          message: 'Release ${{ steps.bump-semver.outputs.new_version }}'

  build:
    name: Build and Test .NET
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3.2.0

    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3.1

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.1.1

    - name: Restore NuGet packages
      run: nuget restore Outback/Outback.sln

    - name: Build the Solution
      run: msbuild Outback/Outback.sln /p:Configuration=Release

    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: Build
        path: Outback/Outback/bin/Release/Outback.dll

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [bump-semver, build]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v3.0.2
        with:
          name: Build
          path: build

      - name: Display structure of uploaded builds
        run: ls build

      - name: Zip artifacts
        run: |
          cd build
          for file in $(ls -I "*.zip"); do zip -r "${file}.zip" "$file"; done

      - name: Create Changelog
        id: changelog
        uses: loopwerk/tag-changelog@v1.0.5
        if: ${{ needs.bump-semver.outputs.version != null }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          exclude_types: other,doc,chore
          config_file: .github/changelog-config.js

      - name: Create Release
        id: create-release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.bump-semver.outputs.version }}
          name: Release ${{ needs.bump-semver.outputs.version }}
          body: |
            ${{ steps.changelog.outputs.changelog }}
          files: build/*.dll